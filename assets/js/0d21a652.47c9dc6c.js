"use strict";(self.webpackChunkdocs_decash_com=self.webpackChunkdocs_decash_com||[]).push([[763],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return u}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(n),u=a,m=p["".concat(c,".").concat(u)]||p[u]||h[u]||o;return n?r.createElement(m,i(i({ref:t},d),{},{components:n})):r.createElement(m,i({ref:t},d))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5327:function(e,t,n){var r=n(7294);t.Z=function(e){var t=e.src,n=e.alt,a=e.width;return r.createElement("p",{style:{textAlign:"center",marginTop:20,marginBottom:20}},r.createElement("img",{alt:n,src:t,style:{width:a}}))}},118:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return h},default:function(){return u}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=n(5327),s=["components"],c={sidebar_position:2},l="Merchandise store",d={unversionedId:"guides/merchant",id:"guides/merchant",title:"Merchandise store",description:"This article will guide you through the example of building the merchandise store using DeCash tokens.",source:"@site/docs/guides/merchant.mdx",sourceDirName:"guides",slug:"/guides/merchant",permalink:"/docs/guides/merchant",editUrl:"https://github.com/DeCash-Official/docs.decash.com/edit/main/docs/guides/merchant.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docs",previous:{title:"Signing transactions",permalink:"/docs/getting-started/signing-transactions"}},h=[{value:"The concept",id:"the-concept",children:[],level:2}],p={toc:h};function u(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"merchandise-store"},"Merchandise store"),(0,o.kt)("p",null,'This article will guide you through the example of building the merchandise store using DeCash tokens.\nIn this article, we call a store which sells goods the "merchant", and a "customer" is one who makes a\npurchase in this store.'),(0,o.kt)("h2",{id:"the-concept"},"The concept"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/concepts/delegated-wallets"},"Delegated Wallets")," allow merchants to create multiple multi-purpose\nwallets, primarily to accept DeCash tokens and distinct users who make payments."),(0,o.kt)("p",null,"The following sequence of actions happen in order for customers to pay for their purchases in ",(0,o.kt)("a",{parentName:"p",href:"/docs/concepts/tokens"},"DeCash tokens"),",\nrepresented by the following sequence diagram:"),(0,o.kt)(i.Z,{alt:"Customer-to-merchant payment diagram",src:"/img/merchant-customer-payment-sequence-diagram.png",mdxType:"CenteredImage"}),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"The customer finally lands on the payment page, where they have to pay for their purchases in DeCash tokens."),(0,o.kt)("li",{parentName:"ol"},"The merchant generates a new ",(0,o.kt)("a",{parentName:"li",href:"/docs/concepts/delegated-wallets"},"Delegated Wallet")," by invoking\n",(0,o.kt)("a",{parentName:"li",href:"/docs/api/algorand/create-delegated-wallet"},"CreateDelegatedWallet")," in ",(0,o.kt)("a",{parentName:"li",href:"/docs/api/overview"},"DeCash API"),".\nThey receive an address like ",(0,o.kt)("inlineCode",{parentName:"li"},"6E63EKJYUPLL4SKM5FNX3PD7HSWZ26XPS7BXYLVWJAPDEK3VA7DERTFV4E"),", which is then\noptionally displayed to the customer."),(0,o.kt)("li",{parentName:"ol"},"The customer is then asked to make a payment to this address. Effectively, the merchant invokes\n",(0,o.kt)("a",{parentName:"li",href:"/docs/api/algorand/create-delegated-payment"},"CreateDelegatedPayment")," and asks the customer to sign the\nreturned ",(0,o.kt)("a",{parentName:"li",href:"/docs/api/algorand/create-delegated-payment#regular-response"},"toSign")," transaction with their\nAlgorand wallet. When signing the transaction, a transaction fee in DeCash tokens is displayed to the user."),(0,o.kt)("li",{parentName:"ol"},"The customer signs the transaction. See ",(0,o.kt)("a",{parentName:"li",href:"/docs/getting-started/signing-transactions"},"signing transactions"),"\nto learn more how they can do it for different wallets."),(0,o.kt)("li",{parentName:"ol"},"The signed transaction is sent back to DeCash API via the ",(0,o.kt)("a",{parentName:"li",href:"/docs/api/algorand/submit-transaction"},"SubmitTransaction"),"\nendpoint."),(0,o.kt)("li",{parentName:"ol"},"Once the submitted transaction is mined in the blockchain (takes around 5 seconds), it is considered final\nand the merchant can release the goods to the customer. Merchants can check the transaction status using\n",(0,o.kt)("a",{parentName:"li",href:"#TODO"},"CheckTransaction")," API endpoint.")),(0,o.kt)("p",null,"Thus, every customer goes through the same procedure of making payments to different Delegated Wallets, whereas\nthe merchant can keep a mapping of which purchase corresponds to which delegated wallet. Merchants can then collect\nfunds from many Delegated Wallets to a single wallet using ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/algorand/many-to-one-transfer"},"ManyToOneTransfer"),"."))}u.isMDXComponent=!0}}]);